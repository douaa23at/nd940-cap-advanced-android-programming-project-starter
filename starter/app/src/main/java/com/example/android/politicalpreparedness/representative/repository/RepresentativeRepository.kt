package com.example.android.politicalpreparedness.representative.repositoryimport android.util.Logimport androidx.lifecycle.MutableLiveDataimport com.example.android.politicalpreparedness.network.CivicsApiimport com.example.android.politicalpreparedness.network.models.Addressimport com.example.android.politicalpreparedness.network.models.Officialimport com.example.android.politicalpreparedness.representative.model.Representativeimport kotlinx.coroutines.Dispatchersimport kotlinx.coroutines.withContextclass RepresentativeRepository {    var representatives = MutableLiveData<List<Official>>()    suspend fun getMyRepresentatives(address: Address, includeOffice: Boolean) {        withContext(Dispatchers.IO) {            try {                representatives.postValue(CivicsApi.retrofitService                        .getRepresentatives(address, includeOffice).await().officials)            } catch (e: Exception) {                Log.i("exception : voterInfoResponse ", "${e.message}")            }        }    }}